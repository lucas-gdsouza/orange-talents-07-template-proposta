#SPRING
spring.application.name = Propostas

#DATABASE
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=${URL_DATABASE:jdbc:postgresql://localhost:5433/propostas}
spring.datasource.username=${POSTGRES_USER:propostas}
spring.datasource.password=${POSTGRES_PASSWORD:123}

#JPA
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop

#Exibição de Exceptions Messages de Servidor
#server.error.include-message=always

#ACTUATOR e PROMETHEUS
#Exibição somente do que será exposto pela aplicação
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoint.health.show-details=always
management.endpoints.prometheus.enabled=true

management.metrics.tags.aplicacao=propostas
management.metrics.tags.ambiente=dev

#RESOURCES EXTERNOS
#Ambiente Docker - utlizar host.docker.internal ao invés de localhost
analises.resource=${ANALISE_URL:http://localhost:9999/api/solicitacao}
cartoes.resource=${CARTOES_URL:http://localhost:8888/api/cartoes}

##SPRING SECURITY RESOURCE SERVER CONFIGURATION
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/propostas}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/propostas/protocol/openid-connect/certs}	
